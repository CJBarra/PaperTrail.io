// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaperTrail.Persistence;

namespace PaperTrail.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200306231021_InitialEntityCreate")]
    partial class InitialEntityCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaperTrail.Data.BranchAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("StatusId");

                    b.ToTable("BranchAssets");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BranchAsset");
                });

            modelBuilder.Entity("PaperTrail.Data.BranchHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClosedHours")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("OpenHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("BranchHours");
                });

            modelBuilder.Entity("PaperTrail.Data.BranchOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BranchOffices");
                });

            modelBuilder.Entity("PaperTrail.Data.Checkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchAssetId")
                        .HasColumnType("int");

                    b.Property<int?>("PatronCardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Since")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Until")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchAssetId");

                    b.HasIndex("PatronCardId");

                    b.ToTable("Checkouts");
                });

            modelBuilder.Entity("PaperTrail.Data.CheckoutHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchAssetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckedIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckedOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatronCardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchAssetId");

                    b.HasIndex("PatronCardId");

                    b.ToTable("CheckoutHistories");
                });

            modelBuilder.Entity("PaperTrail.Data.Hold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchAssetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HoldPlaced")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PatronCardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchAssetId");

                    b.HasIndex("PatronCardId");

                    b.ToTable("Holds");
                });

            modelBuilder.Entity("PaperTrail.Data.Patron", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("LocalBranchOfficeId")
                        .HasColumnType("int");

                    b.Property<int?>("PatronCardId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocalBranchOfficeId");

                    b.HasIndex("PatronCardId");

                    b.ToTable("Patrons");
                });

            modelBuilder.Entity("PaperTrail.Data.PatronCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<double>("Fees")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("PatronCards");
                });

            modelBuilder.Entity("PaperTrail.Data.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("PaperTrail.Data.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Values");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Value 101"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Value 102"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Value 103"
                        });
                });

            modelBuilder.Entity("PaperTrail.Data.Book", b =>
                {
                    b.HasBaseType("PaperTrail.Data.BranchAsset");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeweyIndex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ISBN")
                        .HasColumnType("uniqueidentifier");

                    b.HasDiscriminator().HasValue("Book");
                });

            modelBuilder.Entity("PaperTrail.Data.Video", b =>
                {
                    b.HasBaseType("PaperTrail.Data.BranchAsset");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("PaperTrail.Data.BranchAsset", b =>
                {
                    b.HasOne("PaperTrail.Data.BranchOffice", "Location")
                        .WithMany("BranchAssets")
                        .HasForeignKey("LocationId");

                    b.HasOne("PaperTrail.Data.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PaperTrail.Data.BranchHours", b =>
                {
                    b.HasOne("PaperTrail.Data.BranchOffice", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");
                });

            modelBuilder.Entity("PaperTrail.Data.Checkout", b =>
                {
                    b.HasOne("PaperTrail.Data.BranchAsset", "BranchAsset")
                        .WithMany()
                        .HasForeignKey("BranchAssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaperTrail.Data.PatronCard", "PatronCard")
                        .WithMany("Checkouts")
                        .HasForeignKey("PatronCardId");
                });

            modelBuilder.Entity("PaperTrail.Data.CheckoutHistory", b =>
                {
                    b.HasOne("PaperTrail.Data.BranchAsset", "BranchAsset")
                        .WithMany()
                        .HasForeignKey("BranchAssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaperTrail.Data.PatronCard", "PatronCard")
                        .WithMany()
                        .HasForeignKey("PatronCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PaperTrail.Data.Hold", b =>
                {
                    b.HasOne("PaperTrail.Data.BranchAsset", "BranchAsset")
                        .WithMany()
                        .HasForeignKey("BranchAssetId");

                    b.HasOne("PaperTrail.Data.PatronCard", "PatronCard")
                        .WithMany()
                        .HasForeignKey("PatronCardId");
                });

            modelBuilder.Entity("PaperTrail.Data.Patron", b =>
                {
                    b.HasOne("PaperTrail.Data.BranchOffice", "LocalBranchOffice")
                        .WithMany("Patrons")
                        .HasForeignKey("LocalBranchOfficeId");

                    b.HasOne("PaperTrail.Data.PatronCard", "PatronCard")
                        .WithMany()
                        .HasForeignKey("PatronCardId");
                });
#pragma warning restore 612, 618
        }
    }
}
